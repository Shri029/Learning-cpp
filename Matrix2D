//Implementation of Maximum sum of hour glass in matrix

#include <bits/stdc++.h>

using namespace std;

// Complete the hourglassSum function below.
int hourglassSum(vector<vector<int>> arr) {
    
    int i,j,sum=0,maxs=0;
    
    if(arr.size()<3)
        return -1;
    
    for(i=0;i<(arr.size())-2;i++){
        for(j=0;j<(arr.size())-2;j++){
            
            sum=(arr[i][j]+arr[i][j+1]+arr[i][j+2])+
                (arr[i+1][j+1])+
                (arr[i+2][j]+arr[i+2][j+1]+arr[i+2][j+2]);
          
              maxs=max(sum,maxs);
        }
    }
    return maxs;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> arr(6);
    for (int i = 0; i < 6; i++) {
        arr[i].resize(6);

        for (int j = 0; j < 6; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = hourglassSum(arr);

    cout << result << "\n";

    fout.close();

    return 0;
}

/*  
    Sample Input
    1 1 1 0 0 0
    0 1 0 0 0 0
    1 1 1 0 0 0
    0 9 2 -4 -4 0
    0 0 0 -2 0 0
    0 0 -1 -2 -4 0
    
    Output: 13
    
*/
